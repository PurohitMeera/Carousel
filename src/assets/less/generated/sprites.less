/*
LESS variables are information about icon's compiled state, stored under its original file name

.icon-home {
  width: @icon-home-width;
}

The large array-like variables contain all information about a single icon
@icon-home: x y offset_x offset_y width height total_width total_height image_path name;

At the bottom of this section, we provide information about the spritesheet itself
@spritesheet: width height image @spritesheet-sprites;
*/
@blue-carat-south-name: 'blue-carat-south';
@blue-carat-south-x: 25px;
@blue-carat-south-y: 0px;
@blue-carat-south-offset-x: -25px;
@blue-carat-south-offset-y: 0px;
@blue-carat-south-width: 31px;
@blue-carat-south-height: 18px;
@blue-carat-south-total-width: 56px;
@blue-carat-south-total-height: 39px;
@blue-carat-south-image: '../../generated-src/images/te-sprite.png';
@blue-carat-south: 25px 0px -25px 0px 31px 18px 56px 39px '../../generated-src/images/te-sprite.png' 'blue-carat-south';
@document-flap-white-name: 'document-flap-white';
@document-flap-white-x: 0px;
@document-flap-white-y: 0px;
@document-flap-white-offset-x: 0px;
@document-flap-white-offset-y: 0px;
@document-flap-white-width: 25px;
@document-flap-white-height: 25px;
@document-flap-white-total-width: 56px;
@document-flap-white-total-height: 39px;
@document-flap-white-image: '../../generated-src/images/te-sprite.png';
@document-flap-white: 0px 0px 0px 0px 25px 25px 56px 39px '../../generated-src/images/te-sprite.png' 'document-flap-white';
@radio-button-selected-name: 'radio-button-selected';
@radio-button-selected-x: 0px;
@radio-button-selected-y: 25px;
@radio-button-selected-offset-x: 0px;
@radio-button-selected-offset-y: -25px;
@radio-button-selected-width: 14px;
@radio-button-selected-height: 14px;
@radio-button-selected-total-width: 56px;
@radio-button-selected-total-height: 39px;
@radio-button-selected-image: '../../generated-src/images/te-sprite.png';
@radio-button-selected: 0px 25px 0px -25px 14px 14px 56px 39px '../../generated-src/images/te-sprite.png' 'radio-button-selected';
@radio-button-unselected-name: 'radio-button-unselected';
@radio-button-unselected-x: 14px;
@radio-button-unselected-y: 25px;
@radio-button-unselected-offset-x: -14px;
@radio-button-unselected-offset-y: -25px;
@radio-button-unselected-width: 14px;
@radio-button-unselected-height: 14px;
@radio-button-unselected-total-width: 56px;
@radio-button-unselected-total-height: 39px;
@radio-button-unselected-image: '../../generated-src/images/te-sprite.png';
@radio-button-unselected: 14px 25px -14px -25px 14px 14px 56px 39px '../../generated-src/images/te-sprite.png' 'radio-button-unselected';
@spritesheet-width: 56px;
@spritesheet-height: 39px;
@spritesheet-image: '../../generated-src/images/te-sprite.png';
@spritesheet-sprites: @blue-carat-south @document-flap-white @radio-button-selected @radio-button-unselected;
@spritesheet: 56px 39px '../../generated-src/images/te-sprite.png' @spritesheet-sprites;

/*
The provided classes are intended to be used with the array-like variables

.icon-home {
  .sprite-width(@icon-home);
}
.icon-email {
  .sprite(@icon-email);
}

Example usage in HTML:

`display: block` sprite:
<div class="icon-home"></div>

To change `display` (e.g. `display: inline-block;`), we suggest using a common CSS class:

// CSS
.icon {
  display: inline-block;
}

// HTML
<i class="icon icon-home"></i>
*/
.sprite-width(@sprite) {
  width: extract(@sprite, 5);
}

.sprite-height(@sprite) {
  height: extract(@sprite, 6);
}

.sprite-position(@sprite) {
  @sprite-offset-x: extract(@sprite, 3);
  @sprite-offset-y: extract(@sprite, 4);
  background-position: @sprite-offset-x @sprite-offset-y;
}

.sprite-image(@sprite) {
  @sprite-image: extract(@sprite, 9);
  background-image: e(%('url(%a)', e(@sprite-image)));
}

.sprite(@sprite) {
  .sprite-image(@sprite);
  .sprite-position(@sprite);
  .sprite-width(@sprite);
  .sprite-height(@sprite);
}

/*
The `.sprites` mixin generates identical output to the CSS template
  but can be overridden inside of LESS

This must be run when you have at least 2 sprites.
  If run with a single sprite, then there will be reference errors.

.sprites(@spritesheet-sprites);
*/
.sprites(@sprites, @i: 1) when (@i <= length(@sprites)) {
  @sprite: extract(@sprites, @i);
  @sprite-name: e(extract(@sprite, 10));
  .@{sprite-name} {
    .sprite(@sprite);
  }
  .sprites(@sprites, @i + 1);
}
